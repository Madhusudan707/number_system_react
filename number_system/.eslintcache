[{"/home/oem/Documents/GitHub/number_system_react/number_system/src/index.js":"1","/home/oem/Documents/GitHub/number_system_react/number_system/src/App.js":"2","/home/oem/Documents/GitHub/number_system_react/number_system/src/components/Landing/Landing.jsx":"3","/home/oem/Documents/GitHub/number_system_react/number_system/src/components/Navbar/Navbar.jsx":"4","/home/oem/Documents/GitHub/number_system_react/number_system/src/components/Heading/Heading.jsx":"5","/home/oem/Documents/GitHub/number_system_react/number_system/src/components/InputBox/InputBox.jsx":"6","/home/oem/Documents/GitHub/number_system_react/number_system/src/components/ContainedButtons/ContainedButtons.jsx":"7","/home/oem/Documents/GitHub/number_system_react/number_system/src/components/convert.js":"8"},{"size":222,"mtime":1612338665572,"results":"9","hashOfConfig":"10"},{"size":314,"mtime":1612352893351,"results":"11","hashOfConfig":"10"},{"size":7349,"mtime":1612362013395,"results":"12","hashOfConfig":"10"},{"size":1272,"mtime":1612158126134,"results":"13","hashOfConfig":"10"},{"size":705,"mtime":1612341763677,"results":"14","hashOfConfig":"10"},{"size":1385,"mtime":1612348926569,"results":"15","hashOfConfig":"10"},{"size":1328,"mtime":1612278685722,"results":"16","hashOfConfig":"10"},{"size":3231,"mtime":1612351754140,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1beejy",{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"20"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"20"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"20"},"/home/oem/Documents/GitHub/number_system_react/number_system/src/index.js",[],["42","43"],"/home/oem/Documents/GitHub/number_system_react/number_system/src/App.js",["44"],"import './App.css';\nimport Landing from './components/Landing/Landing'\nimport ReactGA from 'react-ga';\nfunction initializeReactGA() {\n  ReactGA.initialize('G-T4V19VQYFE');\n  ReactGA.pageview('/index');\n}\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Landing/>\n    </div>\n  );\n}\n\nexport default App;\n","/home/oem/Documents/GitHub/number_system_react/number_system/src/components/Landing/Landing.jsx",["45","46","47","48","49","50","51","52"],"import React, { useState } from \"react\";\nimport Navbar from \"../Navbar/Navbar\";\nimport InputBox from \"../InputBox/InputBox\";\nimport ContainedButtons from \"../ContainedButtons/ContainedButtons\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport axios from \"axios\";\nimport {\n  BinaryToDecimal,\n  BinaryToOctal,\n  DecimalToBinary_Octal_hexaDecimal,\n  hexadecimalToBinary,\n} from \"../convert.js\";\n\nimport \"./landing.css\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary,\n  },\n}));\n\nconst Landing = () => {\n  const classes = useStyles();\n  // const [inputData, setInputData] = useState(\"\");\n  let input, id, inputBox;\n\n  function clickHandler() {\n    inputBox = document.querySelectorAll(\".MuiInputBase-input\");\n    for (let i = 0; i < inputBox.length; i++) {\n      let textBoxValue = 0;\n      textBoxValue = document.getElementById(inputBox[i].id).value;\n      if (i == 0 && textBoxValue) {\n        //Binary to All\n        let toAll = 1,\n          base,\n          returnValue = 0;\n        while (toAll <= 3) {\n          switch (toAll) {\n            case 1:\n              base = 2;\n              returnValue = BinaryToDecimal(textBoxValue, base);\n\n              document.getElementById(\"decimal\").value = returnValue;\n\n              break;\n            case 2:\n              base = 2;\n              returnValue = BinaryToOctal(textBoxValue, base);\n              document.getElementById(\"octal\").value = returnValue;\n\n              break;\n            case 3:\n              base = 2;\n              returnValue = BinaryToDecimal(textBoxValue, base);\n              base = 16;\n              returnValue = DecimalToBinary_Octal_hexaDecimal(\n                returnValue,\n                base\n              );\n              document.getElementById(\"hexadecimal\").value = returnValue;\n\n              break;\n            default:\n          }\n          toAll = toAll + 1;\n        }\n      } else if (i == 1 && textBoxValue) {\n        let toAll = 1,\n          base,\n          returnValue = 0;\n        while (toAll <= 3) {\n          //Decimal to All\n          switch (toAll) {\n            case 1:\n              base = 2;\n              returnValue = DecimalToBinary_Octal_hexaDecimal(\n                textBoxValue,\n                base\n              );\n              document.getElementById(\"binary\").value = returnValue;\n\n              break;\n            case 2:\n              base = 8;\n              returnValue = DecimalToBinary_Octal_hexaDecimal(\n                textBoxValue,\n                base\n              );\n              document.getElementById(\"octal\").value = returnValue;\n\n              break;\n            case 3:\n              base = 16;\n              returnValue = DecimalToBinary_Octal_hexaDecimal(\n                textBoxValue,\n                base\n              );\n              document.getElementById(\"hexadecimal\").value = returnValue;\n\n              break;\n            default:\n          }\n          toAll = toAll + 1;\n        }\n      } else if (i == 2 && textBoxValue) {\n        //Octal to All\n        let toAll = 1,\n          base,\n          returnValue = 0;\n        while (toAll <= 3) {\n          switch (toAll) {\n            case 1:\n              base = 8;\n              returnValue = BinaryToDecimal(textBoxValue, base);\n              base = 2;\n              returnValue = DecimalToBinary_Octal_hexaDecimal(\n                returnValue,\n                base\n              );\n              document.getElementById(\"binary\").value = returnValue;\n\n              break;\n            case 2:\n              base = 8;\n              returnValue = BinaryToDecimal(textBoxValue, base);\n              document.getElementById(\"decimal\").value = returnValue;\n\n              break;\n            case 3:\n              base = 8;\n              returnValue = BinaryToDecimal(textBoxValue, base);\n              base = 16;\n              returnValue = DecimalToBinary_Octal_hexaDecimal(\n                returnValue,\n                base\n              );\n              document.getElementById(\"hexadecimal\").value = returnValue;\n\n              break;\n            default:\n          }\n          toAll = toAll + 1;\n        }\n      } else if (i == 3 && textBoxValue) {\n        //Octal to All\n        let toAll = 1,\n          base,\n          returnValue = 0;\n        while (toAll <= 3) {\n          switch (toAll) {\n            case 1:\n              base = 16;\n              returnValue = hexadecimalToBinary(textBoxValue, base);\n\n              base = 2;\n              returnValue = DecimalToBinary_Octal_hexaDecimal(\n                returnValue,\n                base\n              );\n              document.getElementById(\"binary\").value = returnValue;\n\n              break;\n            case 2:\n              base = 16;\n              returnValue = hexadecimalToBinary(textBoxValue, base);\n              document.getElementById(\"decimal\").value = returnValue;\n\n              break;\n            case 3:\n              base = 16;\n              returnValue = hexadecimalToBinary(textBoxValue, base);\n              base = 8;\n              returnValue = DecimalToBinary_Octal_hexaDecimal(\n                returnValue,\n                base\n              );\n              document.getElementById(\"octal\").value = returnValue;\n\n              break;\n            default:\n          }\n          toAll = toAll + 1;\n        }\n      }\n    }\n\n    // //setInputData(input)\n    // // axios.get(`http://numbersapi.com/${inputData}/math`)\n    // axios.get(`http://127.0.0.1:3001/number/${input}`).then((res) => {\n    //   const num = res.data;\n\n    //   setInputData(num);\n    // });\n  }\n  function resetHandler(e) {\n    document.getElementById(\"binary\").value = \"\";\n    document.getElementById(\"decimal\").value = \"\";\n    document.getElementById(\"octal\").value = \"\";\n    document.getElementById(\"hexadecimal\").value = \"\";\n  }\n\n  function inputHandler(event) {\n    input = event.target.value;\n    id = event.target.id;\n  }\n  return (\n    <div className={classes.root}>\n      <Grid container spacing={0}>\n        <Grid item xs={12}>\n          <Navbar />\n        </Grid>\n        <Grid item xs={12}>\n          <br /> <br />\n          <div className=\"InputBoxParent\">\n            <InputBox\n              value=\"\"\n              id=\"binary\"\n              className=\"nsBox\"\n              placeholder=\"Enter Binary\"\n              inputHandler={inputHandler}\n            />\n            <InputBox\n              value=\"\"\n              id=\"decimal\"\n              className=\"nsBox\"\n              placeholder=\"Enter Decimal\"\n              inputHandler={inputHandler}\n            />\n            <InputBox\n              value=\"\"\n              id=\"octal\"\n              className=\"nsBox\"\n              placeholder=\"Enter Octal\"\n              inputHandler={inputHandler}\n            />\n            <InputBox\n              value=\"\"\n              id=\"hexadecimal\"\n              className=\"nsBox\"\n              placeholder=\"Enter Hexa Decimal\"\n              inputHandler={inputHandler}\n            />\n          </div>\n        </Grid>\n\n        <ContainedButtons name=\"SUBMIT\" Handler={clickHandler} />\n        <ContainedButtons name=\"RESET\" Handler={resetHandler} />\n      </Grid>\n    </div>\n  );\n};\n\nexport default Landing;\n","/home/oem/Documents/GitHub/number_system_react/number_system/src/components/Navbar/Navbar.jsx",["53","54","55"],"// import React,{Fragment} from 'react'\n// import  './navbar.css'\n// import Heading from '../Heading/Heading'\n\n\n\n// const Navbar = () =>{\n//     return (\n//         <Fragment>\n          \n//             <nav>\n//             <ul>\n//                 <li><a href=''>Home</a></li>\n//                 <li><a href=''>Number Fact</a></li>\n//                 <li><a href=''>Contact</a></li>\n//             </ul>\n//         </nav>\n//         <Heading/>\n//        </Fragment>\n//     )\n// }\n\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Heading from '../Heading/Heading'\nimport  './navbar.css'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  }\n}));\n\n function Navbar() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n            <Heading/>\n          <ul>\n            <li><a href=''>Home</a></li>\n            <li><a href=''>NumberFact</a></li>\n            <li><a href=''>Contact</a></li>\n          </ul>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n\n\nexport default Navbar","/home/oem/Documents/GitHub/number_system_react/number_system/src/components/Heading/Heading.jsx",[],["56","57"],"/home/oem/Documents/GitHub/number_system_react/number_system/src/components/InputBox/InputBox.jsx",["58","59","60","61"],"// import React, { Fragment } from \"react\";\n// import \"./inputbox.css\";\n\n// const InputBox = () => {\n//   return (\n//     <Fragment>\n//       <input type=\"text\" />\n//     </Fragment>\n//   );\n// };\n\nimport React from \"react\";\nimport {\n  fade,\n  withStyles,\n  makeStyles,\n  createMuiTheme,\n} from \"@material-ui/core/styles\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { green } from \"@material-ui/core/colors\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    flexWrap: \"wrap\",\n  },\n  margin: {\n    margin: theme.spacing(1),\n    width: 330,\n  },\n  nsBox: {},\n}));\n\nconst ValidationTextField = withStyles({\n  root: {\n    \"& input:valid + fieldset\": {\n      borderColor: \"blue\",\n      borderWidth: 2,\n    },\n\n    \"& input:valid:focus + fieldset\": {\n      borderLeftWidth: 6,\n      padding: \"4px !important\", // override inline-style\n    },\n  },\n})(TextField);\n\nfunction InputBox({ placeholder, value, inputHandler, id }) {\n  const classes = useStyles();\n\n  return (\n    <form className={classes.root} noValidate>\n      <ValidationTextField\n        className={`${classes.margin} ${classes.nsBox}`}\n        placeholder={placeholder}\n        variant=\"outlined\"\n        defaultValue={value}\n        id={id}\n        onChange={inputHandler}\n      />\n    </form>\n  );\n}\n\nexport default InputBox;\n","/home/oem/Documents/GitHub/number_system_react/number_system/src/components/ContainedButtons/ContainedButtons.jsx",["62"],"// import React, { Fragment } from 'react'\n\n\n// import './button.css'\n\n// const Button = (props) =>{\n//     return (\n//         <Fragment>\n//             <button>{props.name}</button>\n//         </Fragment>\n//     )\n// }\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport ButtonGroup from '@material-ui/core/ButtonGroup';\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    '& > *': {\n      margin: theme.spacing(2),\n     \n    },\n  },\n}));\n\nfunction ContainedButtons({name,color,Handler}) {\n  const classes = useStyles();\n  \n\n    \n\n  return (\n    <div className={classes.root}>\n    {/* <ButtonGroup   aria-label=\"outlined primary button group\" size='large' >\n        <Button color='secondary' variant=\"outlined\" onClick={clickHandler}>SUBMIT</Button>\n        <Button color='secondary' variant=\"outlined\" onClick={resetHandler} >RESET</Button>\n    </ButtonGroup> */}\n   \n        <Button color='secondary' variant=\"outlined\" onClick={Handler} style={{display:'inline !important'}}>{name}</Button>\n        \n        {/* <Button color='secondary' variant=\"outlined\" onClick={resetHandler} >RESET</Button> */}\n   \n    </div>\n  );\n}\n\nexport default ContainedButtons","/home/oem/Documents/GitHub/number_system_react/number_system/src/components/convert.js",["63","64"],"function BinaryToDecimal(binary, base) {\n    let power =0, sum = 0;\n    let binary_arr = binary.split(\"\");\n    binary_arr = binary_arr.map((j) => Number(j));\n    let isArraySumZero = binary_arr.reduce((a, b) => a + b);\n  \n    if (binary_arr[binary_arr.length - 1] === 0 && isArraySumZero === 0) {\n      return 0;\n    } else if (binary_arr[binary_arr.length - 1] === 1 && isArraySumZero === 1) {\n      return 1;\n    } else {\n      power = binary_arr.length - 1;\n  \n      for (let i = 0; i < binary_arr.length; i++) {\n        sum = sum + Math.pow(base, power--) * binary_arr[i];\n      }\n  \n      return sum;\n    }\n  }\n  \n  function BinaryToOctal(binary, base) {\n    let resultBinary,\n      remainder,\n      joinOctal = 0;\n  \n    resultBinary = BinaryToDecimal(binary, base);\n    while (resultBinary > 0) {\n      base = 8;\n      remainder = resultBinary % base;\n      joinOctal = joinOctal * 10 + remainder;\n      resultBinary = parseInt(resultBinary / base);\n    }\n  \n    let resultOctal = reverseNumber(joinOctal);\n    return resultOctal;\n  }\n  \n  function reverseNumber(number) {\n    let remainder,\n      reverse = 0;\n    while (number > 0) {\n      remainder = number % 10;\n      reverse = reverse * 10 + remainder;\n      number = parseInt(number / 10);\n    }\n    return reverse;\n  }\n  \n  function DecimalToBinary_Octal_hexaDecimal(decimal, base) {\n    let remainder = 0,\n      binaryResult_arr = [];\n    while (decimal > 0) {\n      remainder = decimal % base;\n      if (parseInt(base) === 16) {\n        switch (remainder) {\n          case 10:\n            remainder = \"A\";\n            break;\n          case 11:\n            remainder = \"B\";\n            break;\n          case 12:\n            remainder = \"C\";\n            break;\n          case 13:\n            remainder = \"D\";\n            break;\n          case 14:\n            remainder = \"E\";\n            break;\n          case 15:\n            remainder = \"F\";\n            break;\n        }\n      }\n      binaryResult_arr.push(remainder);\n      decimal = parseInt(decimal / base);\n    }\n  \n    return binaryResult_arr.reverse().join(\"\");\n  }\n  \n  function hexadecimalToBinary(HexaDecimal, base) {\n    let hexadecimal_arr = HexaDecimal.split(\"\");\n    let hexadecimal_arr_length = hexadecimal_arr.length;\n    let hexadecimal_power = hexadecimal_arr_length - 1;\n    let remainder,\n      decimalResult = 0;\n    for (let i = 0; i < hexadecimal_arr_length; i++) {\n      remainder = hexadecimal_arr[i];\n      switch (remainder) {\n        case \"A\":\n        case \"a\":\n          remainder = 10;\n          break;\n        case \"B\":\n        case \"b\":\n          remainder = 11;\n          break;\n        case \"C\":\n        case \"c\":\n          remainder = 12;\n          break;\n        case \"D\":\n        case \"d\":\n          remainder = 13;\n          break;\n        case \"E\":\n        case \"e\":\n          remainder = 14;\n          break;\n        case \"F\":\n        case \"f\":\n          remainder = 15;\n          break;\n      }\n      decimalResult =\n        decimalResult + remainder * Math.pow(base, hexadecimal_power);\n      hexadecimal_power = hexadecimal_power - 1;\n    }\n    return decimalResult;\n  }\n  \n  export{BinaryToDecimal,BinaryToOctal,DecimalToBinary_Octal_hexaDecimal,hexadecimalToBinary}\n  \n  ",{"ruleId":"65","replacedBy":"66"},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","severity":1,"message":"70","line":4,"column":10,"nodeType":"71","messageId":"72","endLine":4,"endColumn":27},{"ruleId":"69","severity":1,"message":"73","line":1,"column":17,"nodeType":"71","messageId":"72","endLine":1,"endColumn":25},{"ruleId":"69","severity":1,"message":"74","line":7,"column":8,"nodeType":"71","messageId":"72","endLine":7,"endColumn":13},{"ruleId":"75","severity":1,"message":"76","line":38,"column":13,"nodeType":"77","messageId":"78","endLine":38,"endColumn":15},{"ruleId":"75","severity":1,"message":"76","line":73,"column":20,"nodeType":"77","messageId":"78","endLine":73,"endColumn":22},{"ruleId":"75","severity":1,"message":"76","line":111,"column":20,"nodeType":"77","messageId":"78","endLine":111,"endColumn":22},{"ruleId":"75","severity":1,"message":"76","line":150,"column":20,"nodeType":"77","messageId":"78","endLine":150,"endColumn":22},{"ruleId":"69","severity":1,"message":"79","line":209,"column":5,"nodeType":"71","messageId":"72","endLine":209,"endColumn":10},{"ruleId":"69","severity":1,"message":"80","line":210,"column":5,"nodeType":"71","messageId":"72","endLine":210,"endColumn":7},{"ruleId":"81","severity":1,"message":"82","line":49,"column":17,"nodeType":"83","endLine":49,"endColumn":28},{"ruleId":"81","severity":1,"message":"82","line":50,"column":17,"nodeType":"83","endLine":50,"endColumn":28},{"ruleId":"81","severity":1,"message":"82","line":51,"column":17,"nodeType":"83","endLine":51,"endColumn":28},{"ruleId":"65","replacedBy":"84"},{"ruleId":"67","replacedBy":"85"},{"ruleId":"69","severity":1,"message":"86","line":14,"column":3,"nodeType":"71","messageId":"72","endLine":14,"endColumn":7},{"ruleId":"69","severity":1,"message":"87","line":17,"column":3,"nodeType":"71","messageId":"72","endLine":17,"endColumn":17},{"ruleId":"69","severity":1,"message":"88","line":19,"column":8,"nodeType":"71","messageId":"72","endLine":19,"endColumn":17},{"ruleId":"69","severity":1,"message":"89","line":21,"column":10,"nodeType":"71","messageId":"72","endLine":21,"endColumn":15},{"ruleId":"69","severity":1,"message":"90","line":17,"column":8,"nodeType":"71","messageId":"72","endLine":17,"endColumn":19},{"ruleId":"91","severity":1,"message":"92","line":56,"column":9,"nodeType":"93","messageId":"94","endLine":75,"endColumn":10},{"ruleId":"91","severity":1,"message":"92","line":92,"column":7,"nodeType":"93","messageId":"94","endLine":117,"endColumn":8},"no-native-reassign",["95"],"no-negated-in-lhs",["96"],"no-unused-vars","'initializeReactGA' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'axios' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'input' is assigned a value but never used.","'id' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["95"],["96"],"'fade' is defined but never used.","'createMuiTheme' is defined but never used.","'InputBase' is defined but never used.","'green' is defined but never used.","'ButtonGroup' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-global-assign","no-unsafe-negation"]